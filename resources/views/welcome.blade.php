@extends('layouts.base')

@section('header')
  <div id="block-header" class="jumbotron p-4 p-md-5 text-white rounded bg-dark">
    <div class="col-md-6 px-0">
      <h1 class="display-4 font-italic">Приветствуем вас</h1>
      <p class="lead my-3">Это блог со статьями на различные тематики. Здесь пишут о программировании, играх и др. Статьи обсуждают в комментариях под ними. Для комментирования нужно зарегистрироваться.</p>
      <!--<p class="lead mb-0"><a href="{{asset('#')}}" class="text-white font-weight-bold">Continue reading...</a></p>-->
    </div>
  </div>
  <div class="row mb-2">
    <div class="col-md-6">
      <div class="row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
        <div class="col p-4 d-flex flex-column position-static">
          <strong class="d-inline-block mb-2 text-primary">World</strong>
          <h3 class="mb-0">Featured post</h3>
          <div class="mb-1 text-muted">Nov 12</div>
          <p class="card-text mb-auto">This is a wider card with supporting text below as a natural lead-in to additional content.</p>
          <a href="{{asset('#')}}" class="stretched-link">Continue reading</a>
        </div>
        <div class="col-auto d-none d-lg-block">
          <!--<svg class="bd-placeholder-img" width="200" height="250" xmlns="{{asset('http://www.w3.org/2000/svg')}}" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"/><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>-->
          <img widtg="200" height="250" src="{{asset('public/img/World.jpg')}}">
        </div>
      </div>
    </div>
    <div class="col-md-6">
      <div class="row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
        <div class="col p-4 d-flex flex-column position-static">
          <strong class="d-inline-block mb-2 text-success">Design</strong>
          <h3 class="mb-0">Post title</h3>
          <div class="mb-1 text-muted">Nov 11</div>
          <p class="mb-auto">This is a wider card with supporting text below as a natural lead-in to additional content.</p>
          <a href="{{asset('#')}}" class="stretched-link">Continue reading</a>
        </div>
        <div class="col-auto d-none d-lg-block">
          <!--<svg class="bd-placeholder-img" width="200" height="250" xmlns="{{asset('http://www.w3.org/2000/svg')}}" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"/><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>-->
          <img widtg="200" height="250" src="{{asset('public/img/LightBulb.jpg')}}">
        </div>
      </div>
    </div>
  </div>

@endsection

@section('content')
      <div class="blog-post">
        <h2 class="blog-post-title"><a href="{{asset('url')}}">Новый алгоритм поиска пути в Factorio</a></h2>
        <p class="blog-post-meta">January 1, 2014 by <a href="{{asset('user_id')}}">Mark</a></p>
        <hr>
        <p>На прошлой неделе мы говорили в своём блоге об изменениях, которые позволят врагам (biters) не наталкиваться друг на друга, но это было не единственное обновление, связанное с biter-ами. Совпало так, что в обновления этой недели вошло то, над чем мы работали предыдущие несколько недель — обновление системы поиска пути для врагов.</p>
        <h4>Поиск пути</h4>
        <p>Когда юнит хочет куда-то переместиться, ему сначала нужно понять, как туда добраться. В самом простом случае можно двигаться прямиком к цели, но на пути иногда возникают препятствия — скалы, деревья, гнёзда врагов (spawners), юниты игрока. Чтобы проложить дорогу, мы должны сообщить функции поиска пути (pathfinder) текущую и конечную позиции, а pathfinder вернёт нам (возможно, через много тактов) путь, который просто является набором промежуточных точек (waypoints), по которым должен двигаться юнит, чтобы добраться до места назначения.</p>
        <p>Для выполнения своей работы pathfinder использует алгоритм под названием A* (произносится «A star»). Простой пример поиска пути при помощи A* показан на видео: biter хочет найти путь в обход скал. Функция поиска пути начинает исследовать карту вокруг biter-а (исследование показано белыми точками). Сначала она пытается пойти напрямик к цели, но как только достигает скал, «разливается» в обе стороны, пытаясь найти позицию из которой снова можно будет двигаться к цели.</p>
        <p>Каждая точка в анимации обозначает узел. Каждый узел запоминает расстояние от начала поиска и оценку расстояния от этого узла до цели (эта оценка вычисляется эвристической функцией). Именно благодаря эвристической функции работает A* — она направляет алгоритм в верную сторону.</p>
        <p>В простейшем случае эта функция является просто вычислением расстояния по прямой от узла до позиции цели — именно такой подход мы использовали в Factorio с самого начала разработки, и благодаря ему алгоритм изначально движется по прямой. Однако это не единственный вариант — ели эвристическая функция знала бы о некоторых из препятствий, то могла бы направлять алгоритм в обход, что ускорило бы поиск, потому что не пришлось бы исследовать лишние узлы. Очевидно, что чем умнее эвристика, тем сложнее её реализовать.</p>
        <p>Простая эвристическая функция оценки расстояния по прямой хороша для поиска путей на относительно коротких расстояниях. Она устраивала нас в предыдущих версиях Factorio — почти всегда biter-ы перемещались на дальние расстояния только из-за того, что их приводило в гнев загрязнение, а такое случалось не очень часто. Однако теперь у нас есть артиллерия. Артиллерия может запросто стрелять по огромным количествам biter-ов с другой стороны большого озера (и «агрить» их), после чего они пытаются проложить путь в обход озера. На видео ниже показано, как простой алгоритм A*, который мы использовали ранее, пытается обойти озеро.</p>
        <h4>Сокращение блоков</h4>
        <p>Поиск пути — это задача, имеющая долгую историю, и существует множество техник его улучшения. Часть этих техник относится к категории иерархического поиска пути: в этом случае карта сначала упрощается, на этой упрощённой карте находится путь, который затем используется для поиска настоящего пути. Повторюсь, конкретных реализаций такой методики существует несколько, но все они требуют упрощения пространства поиска.</p>
        <p>Как же можно упростить мир Factorio? Наши карты генерируются случайным образом и постоянно изменяются: размещение и удаление сущностей (например, сборщиков, стен или турелей) — это, наверно, самая базовая механика всей игры. Мы не хотим пересчитывать всю упрощённую карту при каждом добавлении или удалении сущности. В то же время, если упрощать карту заново каждый раз, когда нам нужно найти путь, то можно запросто потерять весь полученный выигрыш в производительности.</p>
        <p>Одному из людей с доступом к исходному коду игры (Allaizn) пришла в голову идея. которую я в результате реализовал. Теперь эта идея кажется очевидной.</p>
        <p>Игра основана на блоках размером 32x32 тайлов. Процесс упрощения заменяет каждый блок одним или несколькими абстрактными узлами. Так как наша цель заключается в улучшении поиска пути вокруг озёр, мы можем игнорировать все сущности и рассматривать только тайлы: по воде двигаться нельзя, по суше — можно. Мы разделяем каждый блок на отдельные компоненты. Компонент — это область тайлов, в которой юнит может добраться с одного тайла внутри компонента до любого другого тайла того же компонента. На изображении ниже блок разделён на два отдельных компонента, красный и зелёный. Каждый из этих компонентов станет одним абстрактным узлом — по сути, весь блок сокращается до двух «точек».</p>
        <p>Самая важная мысль Allaizn заключалась в том, что нам не нужно хранить компонент для каждого тайла карты — достаточно запомнить компоненты тайлов по периметру каждого блока, потому что нас интересует только то, с чем соединены другие компоненты (в соседних блоках) каждого компонента, а это зависит только от тайлов, которые находятся на самой границе блока.</p>
        <h4>Иерархический поиск пути</h4>
        <p>Итак, мы выяснили, как упростить карту, но как же использовать это для поиска путей? Как я и говорил, существует множество техник иерархического поиска пути. Простейшая идея заключается в нахождении пути при помощи абстрактных узлов от начала до цели, то есть путь будет являться списком компонентов блоков, которые нужно посетить. После чего мы используем серию старых добрых поисков A*, чтобы конкретно выяснить, как двигаться от одного компонента блока к другому.</p>
        <p>Проблема здесь заключается в том, что мы слишком уж упростили карту: что, если переместиться из одного блока в другой невозможно, потому что какие-то сущности (например, скалы) блокируют путь? При сокращении блоков мы игнорируем все сущности, поэтому знаем только, что тайлы между блоками каким-то образом связаны, но совершенно ничего не знаем о том, можно ли передвигаться от одного к другому.</p>
        <p>Решение заключается в том, чтобы использовать упрощение просто как «рекомендацию» для реального поиска. В частности, мы будем применять его для создания умной версии эвристической функции поиска.</p>
        <p>В результате мы получили следующую схему: у нас есть два pathfinder: базовый pathfinder, который находит настоящий путь, и абстрактный pathfinder, предоставляющий базовому pathfinder эвристическую функцию. Каждый раз, когда базовый pathfinder создаёт новый базовый узел, он вызывает абстрактный pathfinder для получения оценки расстояния до цели. Абстрактный pathfinder действует в обратном порядке — он начинает с цели поиска и прокладывает дорогу к началу, переходя от одного компонента блока к другому. Когда абстрактный поиск находит блок и компонент, в котором создаётся новый базовый узел, он использует расстояние от начала абстрактного поиска (которое, как я говорил, является позицией цели всего поиска) для вычисления оценки расстояния от нового базового узла до общей цели.</p>
        <p>Однако выполнение всего pathfinder для каждого отдельного узла будет далеко не быстрым, даже если абстрактный pathfinder переходит от одного блока к другому. Поэтому вместо этого мы используем схему под названием «обратный возобновляемый A*» (Reverse Resumable A*). «Обратный» означает, что он, как я говорил выше, выполняется от цели к началу. «Возобновляемый» означает, что после нахождения блока, который интересен базовому pathfinder, мы сохраняем все его узлы в памяти. Когда в следующий раз базовый pathfinder создаёт новый узел и ему требуется оценка расстояния, мы просто смотрим на абстрактные узлы, сохранённые из предыдущего поиска. При этом есть большая вероятность того, что требуемый абстрактный узел всё ещё будет в памяти (в конце концов, один абстрактный узел покрывает большую часть блока, а часто и весь блок).</p>
        <p>Даже если базовый pathfinder создаёт узел, находящийся в блоке, не покрытом ни одним из абстрактных узлов, нам не нужно заново выполнять весь абстрактный поиск целиком. Удобное свойство алгоритма A* заключается в том, что даже после того, как он «завершает работу» и находит путь, он продолжает выполнение, исследуя узлы вокруг уже исследованных узлов. И именно это мы делаем, если нам нужна оценка расстояния для базового узла, расположенного в блоке, ещё не покрытом абстрактным поиском: мы возобновляем абстрактный поиск с узлов, хранящихся в памяти, пока он не расширится до узла, который нам нужен.</p>
        <p>На видео ниже показана новая система поиска пути в действии. Синие круги — это абстрактные узлы; белые точки — базовый поиск. Pathfinder в видео сильно замедлен по сравнению с игровым, чтобы показать, как он работает. При обычной скорости весь поиск занимает всего несколько тактов. Заметьте, что базовый поиск, который по-прежнему использует старый алгоритм, который мы применяли всегда, просто волшебным образом «знает», как двигаться в обход озера.</p>
        <p>Так как абстрактный pathfinder используется только для получения эвристической оценки расстояния, базовый поиск довольно легко может отступать от предложенного абстрактным поиском пути. Это значит, что даже несмотря на то, что схема сокращения блоков игнорирует все сущности, базовый pathfinder почти без проблем может обходить их. Благодаря игнорированию сущностей в процессе упрощения карты нам не нужно повторять его заново при каждом добавлении или удалении сущности, достаточно покрывать только те тайлы, которые были изменены (например, как в случае с мусорным полигоном), что происходит намного реже, чем размещение сущностей.</p>
        <p>Кроме того, это означает, что мы по сути используем тот же pathfinder, которым пользовались годами, обновилась только эвристическая функция. То есть это изменение не затронет множество других систем, и повлияет только на скорость поиска.</p>
      </div><!-- /.blog-post -->

      <div class="blog-post">
        <h2 class="blog-post-title"><a href="{{asset('url')}}">Crusader Kings II гайд по DLC</a></h2>
        <p class="blog-post-meta">December 23, 2013 by <a href="{{asset('user_id')}}">Jacob</a></p>
        <p>Так как Crusader Kings II только что стала навсегда бесплатной, но её нескончаемые DLC нет, решил накатать гайд, чтобы помочь новым игрокам определиться, какие из DLC им стоит купить, а какие можно обойти стороной. В данный момент на все DLC скидка 50%, будет действовать ещё сутки с лишним.</p>
        <p>Прежде всего, стоит отметить, что DLC The Old Gods (позволяющее играть за язычников и в частности за Рюрика) можно получить также бесплатно, если подписаться на новости о CK3 по этой ссылке: https://www.crusaderkings.com/ На пикабу уже есть пост с инструкцией: Expansion - Crusader Kings II: The Old Gods (DLC) А если вам понравится мой гайд ниже, можете меня отблагодарить, подписавшись на это дело по реферальной ссылке, которую я оставлю в комментариях. Надеюсь, если я даю людям выбор, да ещё и реферальную ссылку прячу дальше чем обычную, это не засчитают за рекламу? Иначе я не имею малейшего понятия как эти реферальные программы вообще могут работать.</p>
        <h4>А теперь сам гайд.</h4>
        <p>Swords of Islam - тут всё просто, позволяет играть за мусульман. Соответственно, если вы за них играть не собираетесь, можете смело пропускать. Сами мусульмане в игре всё равно будут, просто вы не сможете за них играть.</p>
        <p>Legacy of Rome - посвящено Византийской империи и позволяет такие вещи, как возродить Римскую Империю и починить раскол христианства (фактически объявив католичество ересью). Однако, данное дополнение весьма существенно, даже если вы не собираетесь играть за Византию, т.к. позволяет помимо ополчения иметь пусть небольшую, но регулярную армию.</p>
        <p>Sunset Invasion - самое нафиг никому не сдавшееся DLC про вторжение ацтеков в Европу, чисто по приколу. Сам его всегда отключаю, т.к. бессмертная лошадь-сатанист в должности Папы Римского - это ещё куда ни шло, но ацтеки в Европе - это уже совсем не реалистично.</p>
        <p>The Republic - тут всё так же просто, как с мусульманами, это DLC позволяет играть за торговые республики. Без DLC сами республики всё равно будут, вы просто не сможете за них играть.</p>
        <p>The Old Gods - добавляет новую дату старта - 867 год (в базовой игре можно выбрать любой день любого месяца между 1066 и 1337 годами, либо одну дату из 936 года, добавленную в бесплатном патче The Iron Century), а также позволяет играть за язычников. Напомню, что в 867 году Русью правил язычник Рюрик. Таким образом, данное DLC позволяет играть за Русь с самого её, Руси, основания. Кроме того, как я уже писал в начале поста, данное DLC можно получить бесплатно.</p>
        <p>Sons of Abraham - добавляет дополнительные фичи для авраамических религий, впрочем, в первую очередь для католиков. Но также добавляет возможность играть за евреев (иудеев).</p>
        <p>Rajas of India - позволяет играть за религии, присутствующие в Индии. Как всегда, сама Индия будет в игре и без DLC, оно лишь позволяет самому быть индуистом, буддистом или джайнистом.</p>
        <p>Charlemagne - добавляет новую дату старта - 769 год, наместничества (полезная механика для больших империй), возможность создавать кастомные королевства и империи (это не так важно), ивенты про титулярного персонажа - Карла Великого, и новую религию - зунизм (см. династия Зунбиль). Также добавляет племенной тип правления, в том числе для персонажей из более поздних дат, включая Рюрика, которые без этого DLC считаются феодальными.</p>
        <p>Way of Life - добавляет такую фичу как "жизненный фокус". Вы можете выбрать для персонажа один из десяти фокусов: правление, предпринимательство, охота, война, семья, попойки, соблазнение, интриги, учёность и теология. Фокус можно менять раз в 5 лет. Очень годное DLC, т.к. актуально для персонажей любых народностей и религий, и полезно как для min-max-инга характеристик, так и для отыгрывания роли.</p>
      </div><!-- /.blog-post -->

      <!--<div class="blog-post">
        <h2 class="blog-post-title"><a href="{{asset('url')}}">New feature</a></h2>
        <p class="blog-post-meta">December 14, 2013 by <a href="{{asset('user_id')}}">Chris</a></p>

        <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>
        <ul>
          <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>
          <li>Donec id elit non mi porta gravida at eget metus.</li>
          <li>Nulla vitae elit libero, a pharetra augue.</li>
        </ul>
        <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>
        <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>
      </div>--><!-- /.blog-post -->
	  
@endsection